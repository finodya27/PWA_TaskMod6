{"ast":null,"code":"/* eslint-disable no-restricted-globals */import{clientsClaim}from'workbox-core';import{ExpirationPlugin}from'workbox-expiration';import{precacheAndRoute,createHandlerBoundToURL}from'workbox-precaching';import{registerRoute}from'workbox-routing';import{StaleWhileRevalidate}from'workbox-strategies';clientsClaim();precacheAndRoute(self.__WB_MANIFEST);const fileExtensionRegexp=new RegExp('/[^/?]+\\\\.[^/]+$');registerRoute(_ref=>{let{request,url}=_ref;if(request.mode!=='navigate'){return false;}if(url.pathname.startsWith('/_')){return false;}if(url.pathname.match(fileExtensionRegexp)){return false;}return true;},createHandlerBoundToURL(process.env.PUBLIC_URL+'/index.html'));registerRoute(_ref2=>{let{url}=_ref2;return url.origin===self.location.origin&&url.pathname.endsWith('.png');},new StaleWhileRevalidate({cacheName:'images',plugins:[new ExpirationPlugin({maxEntries:50})]}));// Caching search API responses\nregisterRoute(_ref3=>{let{url}=_ref3;return url.origin==='https://imdb8.p.rapidapi.com';},async _ref4=>{let{request}=_ref4;const cache=await caches.open('search-results-cache');try{const response=await fetch(request);// Cache the response\ncache.put(request,response.clone());return response;}catch(error){// Jika gagal mengambil, ambil dari cache\nconst cachedResponse=await cache.match(request);if(cachedResponse){return cachedResponse;// Kembalikan data dari cache jika tersedia\n}throw error;// Jika tidak ada, lanjutkan dengan error\n}});self.addEventListener('message',event=>{if(event.data&&event.data.type==='SKIP_WAITING'){self.skipWaiting();}});","map":{"version":3,"names":["clientsClaim","ExpirationPlugin","precacheAndRoute","createHandlerBoundToURL","registerRoute","StaleWhileRevalidate","self","__WB_MANIFEST","fileExtensionRegexp","RegExp","_ref","request","url","mode","pathname","startsWith","match","process","env","PUBLIC_URL","_ref2","origin","location","endsWith","cacheName","plugins","maxEntries","_ref3","_ref4","cache","caches","open","response","fetch","put","clone","error","cachedResponse","addEventListener","event","data","type","skipWaiting"],"sources":["C:/Users/finod/prak ppb/modul6-kel02-pwa2/src/service-worker.js"],"sourcesContent":["/* eslint-disable no-restricted-globals */\r\n\r\nimport { clientsClaim } from 'workbox-core';\r\nimport { ExpirationPlugin } from 'workbox-expiration';\r\nimport { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';\r\nimport { registerRoute } from 'workbox-routing';\r\nimport { StaleWhileRevalidate } from 'workbox-strategies';\r\n\r\nclientsClaim();\r\n\r\nprecacheAndRoute(self.__WB_MANIFEST);\r\n\r\nconst fileExtensionRegexp = new RegExp('/[^/?]+\\\\.[^/]+$');\r\nregisterRoute(\r\n  ({ request, url }) => {\r\n    if (request.mode !== 'navigate') {\r\n      return false;\r\n    }\r\n    if (url.pathname.startsWith('/_')) {\r\n      return false;\r\n    }\r\n    if (url.pathname.match(fileExtensionRegexp)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n  createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')\r\n);\r\n\r\nregisterRoute(\r\n  ({ url }) => url.origin === self.location.origin && url.pathname.endsWith('.png'),\r\n  new StaleWhileRevalidate({\r\n    cacheName: 'images',\r\n    plugins: [\r\n      new ExpirationPlugin({ maxEntries: 50 }),\r\n    ],\r\n  })\r\n);\r\n\r\n// Caching search API responses\r\nregisterRoute(\r\n  ({ url }) => url.origin === 'https://imdb8.p.rapidapi.com',\r\n  async ({ request }) => {\r\n    const cache = await caches.open('search-results-cache');\r\n    try {\r\n      const response = await fetch(request);\r\n      \r\n      // Cache the response\r\n      cache.put(request, response.clone());\r\n      return response;\r\n    } catch (error) {\r\n      // Jika gagal mengambil, ambil dari cache\r\n      const cachedResponse = await cache.match(request);\r\n      if (cachedResponse) {\r\n        return cachedResponse; // Kembalikan data dari cache jika tersedia\r\n      }\r\n      throw error; // Jika tidak ada, lanjutkan dengan error\r\n    }\r\n  }\r\n);\r\n\r\nself.addEventListener('message', (event) => {\r\n  if (event.data && event.data.type === 'SKIP_WAITING') {\r\n    self.skipWaiting();\r\n  }\r\n});"],"mappings":"AAAA,0CAEA,OAASA,YAAY,KAAQ,cAAc,CAC3C,OAASC,gBAAgB,KAAQ,oBAAoB,CACrD,OAASC,gBAAgB,CAAEC,uBAAuB,KAAQ,oBAAoB,CAC9E,OAASC,aAAa,KAAQ,iBAAiB,CAC/C,OAASC,oBAAoB,KAAQ,oBAAoB,CAEzDL,YAAY,CAAC,CAAC,CAEdE,gBAAgB,CAACI,IAAI,CAACC,aAAa,CAAC,CAEpC,KAAM,CAAAC,mBAAmB,CAAG,GAAI,CAAAC,MAAM,CAAC,kBAAkB,CAAC,CAC1DL,aAAa,CACXM,IAAA,EAAsB,IAArB,CAAEC,OAAO,CAAEC,GAAI,CAAC,CAAAF,IAAA,CACf,GAAIC,OAAO,CAACE,IAAI,GAAK,UAAU,CAAE,CAC/B,MAAO,MAAK,CACd,CACA,GAAID,GAAG,CAACE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAAC,CAAE,CACjC,MAAO,MAAK,CACd,CACA,GAAIH,GAAG,CAACE,QAAQ,CAACE,KAAK,CAACR,mBAAmB,CAAC,CAAE,CAC3C,MAAO,MAAK,CACd,CACA,MAAO,KAAI,CACb,CAAC,CACDL,uBAAuB,CAACc,OAAO,CAACC,GAAG,CAACC,UAAU,CAAG,aAAa,CAChE,CAAC,CAEDf,aAAa,CACXgB,KAAA,MAAC,CAAER,GAAI,CAAC,CAAAQ,KAAA,OAAK,CAAAR,GAAG,CAACS,MAAM,GAAKf,IAAI,CAACgB,QAAQ,CAACD,MAAM,EAAIT,GAAG,CAACE,QAAQ,CAACS,QAAQ,CAAC,MAAM,CAAC,GACjF,GAAI,CAAAlB,oBAAoB,CAAC,CACvBmB,SAAS,CAAE,QAAQ,CACnBC,OAAO,CAAE,CACP,GAAI,CAAAxB,gBAAgB,CAAC,CAAEyB,UAAU,CAAE,EAAG,CAAC,CAAC,CAE5C,CAAC,CACH,CAAC,CAED;AACAtB,aAAa,CACXuB,KAAA,MAAC,CAAEf,GAAI,CAAC,CAAAe,KAAA,OAAK,CAAAf,GAAG,CAACS,MAAM,GAAK,8BAA8B,GAC1D,MAAAO,KAAA,EAAuB,IAAhB,CAAEjB,OAAQ,CAAC,CAAAiB,KAAA,CAChB,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAC,MAAM,CAACC,IAAI,CAAC,sBAAsB,CAAC,CACvD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACtB,OAAO,CAAC,CAErC;AACAkB,KAAK,CAACK,GAAG,CAACvB,OAAO,CAAEqB,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CACpC,MAAO,CAAAH,QAAQ,CACjB,CAAE,MAAOI,KAAK,CAAE,CACd;AACA,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAR,KAAK,CAACb,KAAK,CAACL,OAAO,CAAC,CACjD,GAAI0B,cAAc,CAAE,CAClB,MAAO,CAAAA,cAAc,CAAE;AACzB,CACA,KAAM,CAAAD,KAAK,CAAE;AACf,CACF,CACF,CAAC,CAED9B,IAAI,CAACgC,gBAAgB,CAAC,SAAS,CAAGC,KAAK,EAAK,CAC1C,GAAIA,KAAK,CAACC,IAAI,EAAID,KAAK,CAACC,IAAI,CAACC,IAAI,GAAK,cAAc,CAAE,CACpDnC,IAAI,CAACoC,WAAW,CAAC,CAAC,CACpB,CACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}